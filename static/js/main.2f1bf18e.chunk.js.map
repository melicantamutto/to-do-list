{"version":3,"sources":["components/SelectInput.js","firebase-config.js","components/Input.js","components/Form.js","components/Task.js","components/ToDoList.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SelectInput","setStatus","classes","FormControl","variant","className","InputLabel","htmlFor","Select","native","label","onChange","e","target","value","name","inputProps","id","aria-label","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","root","width","addButton","borderRadius","color","Input","setTasks","tasks","setInputText","inputText","clsx","textField","OutlinedInput","type","endAdornment","InputAdornment","position","IconButton","onClick","preventDefault","task","text","completed","Math","random","collection","add","then","docRef","console","log","catch","error","addToFirebase","disabled","trim","length","edge","labelWidth","display","backgroundColor","padding","flexDirection","Form","justifyContent","flexWrap","marginBottom","alignItems","content","flex","mainText","textAlign","buttonsContainer","buttons","background","border","cursor","fontSize","checkButton","redButton","textDecoration","opacity","Task","Card","CardContent","Typography","component","item","doc","set","delete","maxWidth","listStyle","ToDoList","filteredTasks","map","mainContainer","minHeight","App","useState","status","setFilteredTasks","useEffect","onSnapshot","querySnapshot","docs","forEach","push","data","filter","handlerFilter","CssBaseline","Container","mainTitle","createMuiTheme","palette","primary","main","secondary","textPrimary","secondaryBackground","danger","responsiveFontSizes","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.2f1bf18e.chunk.js","sourcesContent":["import Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst SelectInput = ({ setStatus }) => {\n  const classes = useStyles();\n  const handlerStatus = (e) => setStatus(e.target.value);\n\n  return (\n    <FormControl variant=\"outlined\" className={classes.formControl}>\n      <InputLabel htmlFor=\"outlined-order-native-simple\">Show</InputLabel>\n      <Select\n        native\n        label=\"Show\"\n        onChange={handlerStatus}\n        name=\"showTasks\"\n        inputProps={{\n          name: \"Show\",\n          id: \"outlined-Show-native-simple\",\n        }}\n      >\n        <option aria-label=\"None\" value=\"\" />\n        <option value=\"all\">All</option>\n        <option value=\"done\">Completed</option>\n        <option value=\"pending\">Incomplete</option>\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default SelectInput;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD8tonH-R-L5YmiK6Mv3ojGZSdF3Rtgs0g\",\n  authDomain: \"to-do-list-d76aa.firebaseapp.com\",\n  projectId: \"to-do-list-d76aa\",\n  storageBucket: \"to-do-list-d76aa.appspot.com\",\n  messagingSenderId: \"215976367676\",\n  appId: \"1:215976367676:web:183587c07f9705dc361539\",\n};\n\n// Initialize Firebase\nconst fb = firebase.initializeApp(firebaseConfig);\nexport const db = fb.firestore();\n","import { db } from \"../firebase-config\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      width: \"25rem\",\n      margin: theme.spacing(1),\n      \"@media (max-width:660px)\": {\n        width: '94%',\n      },\n    },\n  },\n  addButton: {\n    borderRadius: \"5px\",\n    color: \"#e29578\",\n  },\n}));\n\nconst Input = ({ setTasks, tasks, setInputText, inputText }) => {\n  const classes = useStyles();\n  const addToFirebase = (task) => {\n    db.collection(\"tasks\")\n      .add(task)\n      .then((docRef) => {\n        console.log(\"Document written with ID: \", docRef.id);\n      })\n      .catch((error) => {\n        console.error(\"Error adding document: \", error);\n      });\n  };\n\n  const addTaskhandler = (e) => {\n    e.preventDefault();\n    const task = {\n      text: inputText,\n      completed: false,\n      id: Math.random() * 10000,\n    };\n    setTasks([...tasks, task]);\n    addToFirebase(task);\n    setInputText(\"\");\n  };\n\n  const inputTextHandler = (e) => setInputText(e.target.value);\n\n  return (\n    <>\n      <div className={classes.root}>\n        <FormControl\n          className={clsx(classes.margin, classes.textField)}\n          variant=\"outlined\"\n        >\n          <InputLabel htmlFor=\"outlined-adornment-newAssignment\">\n            Add Task\n          </InputLabel>\n          <OutlinedInput\n            id=\"outlined-adornment-newAssignment\"\n            type=\"text\"\n            value={inputText}\n            onChange={inputTextHandler}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  onClick={addTaskhandler}\n                  disabled={inputText.trim().length === 0}\n                  edge=\"end\"\n                  type=\"submit\"\n                  className={classes.addButton}\n                >\n                  <i className=\"fas fa-plus-square\"></i>\n                </IconButton>\n              </InputAdornment>\n            }\n            labelWidth={70}\n          />\n        </FormControl>\n      </div>\n    </>\n  );\n};\n\nexport default Input;\n","import SelectInput from \"./SelectInput\";\nimport Input from \"./Input\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    width: \"fit-content\",\n    backgroundColor: \"#f8edeb\",\n    margin: \"2rem auto\",\n    borderRadius: \"10px\",\n    padding: \"0.25rem 0.75rem\",\n    \"@media (max-width:660px)\": {\n      flexDirection: \"column\",\n      width: '100%',\n    },\n  },\n}));\n\nconst Form = ({ setTasks, tasks, setInputText, inputText, setStatus }) => {\n  const classes = useStyles();\n  return (\n    <form className={classes.root}>\n      <Input\n        setTasks={setTasks}\n        tasks={tasks}\n        setInputText={setInputText}\n        inputText={inputText}\n      />\n      <SelectInput setStatus={setStatus} />\n    </form>\n  );\n};\n\nexport default Form;\n","import { db } from \"../firebase-config\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    flexWrap: 'wrap',\n    padding: \"0.4rem\",\n    marginBottom: \"0.75rem\",\n    backgroundColor: \"#f4f3ee\",\n    alignItems: \"center\",\n    \"@media (max-width:660px)\": {\n      flexDirection: \"column\",\n    },\n  },\n  content: {\n    flex: \"1 0 auto\",\n\n  },\n  mainText: {\n    textAlign: \"left\",\n\n  },\n  buttonsContainer:{\n    \n  },\n  buttons: {\n    background: \"#643939\",\n    color: \"white\",\n    border: \"none\",\n    padding: \"1rem\",\n    cursor: \"pointer\",\n    fontSize: \"1rem\",\n    \"&> .fa-times\": {\n      padding: \"0 0.16rem\",\n    },\n  },\n\n  checkButton: {\n    background: \"rgb(87, 179, 151)\",\n  },\n  redButton: {\n    backgroundColor: \"#a73636\",\n  },\n  completed: {\n    textDecoration: \"line-through\",\n    opacity: \"0.5\",\n  },\n}));\n\nconst Task = ({ task }) => {\n  const classes = useStyles();\n\n  const deleteFromFirebase = () => {\n    db.collection(\"tasks\")\n      .doc(task.id)\n      .delete()\n      .then(() => {\n        console.log(\"Document successfully deleted!\");\n      })\n      .catch((error) => {\n        console.error(\"Error removing document: \", error);\n      });\n  };\n\n  const editFromFirebase = (item) => {\n    db.collection(\"tasks\")\n      .doc(item.id)\n      .set({\n        ...item,\n        completed: !item.completed,\n      })\n      .then(() => {\n        console.log(\"Document successfully written!\");\n      })\n      .catch((error) => {\n        console.error(\"Error writing document: \", error);\n      });\n  };\n\n  const handlerDelete = () => deleteFromFirebase();\n\n  const handlerComplete = () => editFromFirebase(task);\n\n  return (\n    <Card className={classes.root} id={task.id}>\n      <CardContent className={classes.content}>\n        <Typography\n          component=\"p\"\n          variant=\"body1\"\n          className={`${classes.mainText} ${\n            task.completed && classes.completed\n          }`}\n        >\n          {task.text}\n        </Typography>\n      </CardContent>\n      <div className={classes.buttonsContainer}>\n        <button\n          onClick={handlerComplete}\n          className={`${classes.buttons} ${classes.checkButton} ${\n            task.completed && classes.redButton\n          }`}\n        >\n          <i className={`fas ${task.completed ? \"fa-times\" : \"fa-check\"}`}></i>\n        </button>\n\n        <button onClick={handlerDelete} className={classes.buttons}>\n          <i className=\"fas fa-trash\"></i>\n        </button>\n      </div>\n    </Card>\n  );\n};\n\nexport default Task;\n","import Task from \"./Task\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: \"10rem\",\n    maxWidth: \"fit-content\",\n    listStyle: \"none\",\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"0\",\n    margin: \"auto\",\n    \"& >*\": {\n      width: \"100%\",\n    },\n  },\n}));\n\nconst ToDoList = ({ filteredTasks }) => {\n  const classes = useStyles();\n  return (\n    <ul className={classes.root}>\n      {filteredTasks.map((task) => (\n        <Task task={task} key={task.id} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ToDoList;\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport ToDoList from \"./components/ToDoList\";\nimport { db } from \"./firebase-config\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainContainer: {\n    textAlign: \"center\",\n    backgroundColor: \"#6d6875\",\n    minHeight: \"100vh\",\n    padding: \"5rem\",\n    \"@media (max-width:780px)\": { // eslint-disable-line no-useless-computed-key\n      padding: \"2rem\",\n    },\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const [tasks, setTasks] = useState([]);\n  const [inputText, setInputText] = useState(\"\");\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTasks, setFilteredTasks] = useState([]);\n\n  const getFromFirebase = () => {\n    db.collection(\"tasks\").onSnapshot((querySnapshot) => {\n      const docs = [];\n      querySnapshot.forEach((doc) => {\n        docs.push({ ...doc.data(), id: doc.id });\n      });\n      setTasks(docs);\n    });\n  };\n\n  useEffect(getFromFirebase, []);\n\n  useEffect(() => {\n    const handlerFilter = () => {\n      switch (status) {\n        case \"done\":\n          setFilteredTasks(tasks.filter((task) => task.completed === true));\n          break;\n        case \"pending\":\n          setFilteredTasks(tasks.filter((task) => task.completed === false));\n          break;\n        default:\n          setFilteredTasks(tasks);\n          break;\n      }\n    };\n    handlerFilter();\n  }, [tasks, status]);\n\n  return (\n    <>\n      <CssBaseline />\n      <Container maxWidth=\"xl\" className={classes.mainContainer}>\n        <Typography\n          component=\"h1\"\n          variant=\"h1\"\n          color=\"secondary\"\n          className={classes.mainTitle}\n        >\n          To-do List\n        </Typography>\n        <Form\n          setTasks={setTasks}\n          tasks={tasks}\n          setInputText={setInputText}\n          inputText={inputText}\n          setStatus={setStatus}\n        />\n        <ToDoList filteredTasks={filteredTasks} />\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"./firebase-config\";\nimport { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#6d6875\",\n    },\n    secondary: {\n      main: \"#ffb4a2\",\n    },\n    textPrimary: {\n      main: \"#ffcdb2\",\n    },\n    secondaryBackground: {\n      main: \"#b5838d\",\n    },\n    danger: {\n      main: \"#e5989b\",\n    },\n  },\n});\n\n\n\n\ntheme = responsiveFontSizes(theme);\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}