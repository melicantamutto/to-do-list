{"version":3,"sources":["components/SelectInput.js","components/Input.js","components/Form.js","components/Task.js","components/ToDoList.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SelectInput","setStatus","classes","FormControl","variant","className","InputLabel","htmlFor","Select","native","label","onChange","e","target","value","name","inputProps","id","aria-label","root","width","addButton","borderRadius","color","Input","setTasks","tasks","setInputText","inputText","clsx","textField","OutlinedInput","type","endAdornment","InputAdornment","position","IconButton","onClick","preventDefault","task","text","completed","Math","random","disabled","trim","length","edge","labelWidth","display","backgroundColor","padding","flexDirection","Form","justifyContent","flexWrap","marginBottom","alignItems","content","flex","mainText","textAlign","buttonsContainer","buttons","background","border","cursor","fontSize","checkButton","redButton","textDecoration","opacity","Task","Card","CardContent","Typography","component","map","item","filter","maxWidth","listStyle","ToDoList","filteredTasks","mainContainer","minHeight","App","useState","status","setFilteredTasks","useEffect","localStorage","getItem","setItem","JSON","stringify","tasksLocal","parse","getFromStorage","handlerFilter","CssBaseline","Container","mainTitle","createMuiTheme","palette","primary","main","secondary","textPrimary","secondaryBackground","danger","responsiveFontSizes","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"sQAKMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,YAAa,CACXC,OAAQF,EAAMG,QAAQ,GACtBC,SAAU,KAEZC,YAAa,CACXC,UAAWN,EAAMG,QAAQ,QA8BdI,EA1BK,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACfC,EAAUX,IAGhB,OACE,eAACY,EAAA,EAAD,CAAaC,QAAQ,WAAWC,UAAWH,EAAQR,YAAnD,UACE,cAACY,EAAA,EAAD,CAAYC,QAAQ,+BAApB,kBACA,eAACC,EAAA,EAAD,CACEC,QAAM,EACNC,MAAM,OACNC,SARgB,SAACC,GAAD,OAAOX,EAAUW,EAAEC,OAAOC,QAS1CC,KAAK,YACLC,WAAY,CACVD,KAAM,OACNE,GAAI,+BAPR,UAUE,wBAAQC,aAAW,OAAOJ,MAAM,KAChC,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,OAAd,uBACA,wBAAQA,MAAM,UAAd,+B,0CC3BFvB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0B,KAAM,CACJ,QAAS,CACPC,MAAO,QACPzB,OAAQF,EAAMG,QAAQ,GACtB,2BAA4B,CAC1BwB,MAAO,SAIbC,UAAW,CACTC,aAAc,MACdC,MAAO,eAwDIC,EApDD,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UACxC1B,EAAUX,IAehB,OACE,mCACE,qBAAKc,UAAWH,EAAQiB,KAAxB,SACE,eAAChB,EAAA,EAAD,CACEE,UAAWwB,YAAK3B,EAAQP,OAAQO,EAAQ4B,WACxC1B,QAAQ,WAFV,UAIE,cAACE,EAAA,EAAD,CAAYC,QAAQ,mCAApB,sBAGA,cAACwB,EAAA,EAAD,CACEd,GAAG,mCACHe,KAAK,OACLlB,MAAOc,EACPjB,SAhBe,SAACC,GAAD,OAAOe,EAAaf,EAAEC,OAAOC,QAiB5CmB,aACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACE,cAACC,EAAA,EAAD,CACEC,QA/BO,SAACzB,GACtBA,EAAE0B,iBACF,IAAMC,EAAO,CACXC,KAAMZ,EACNa,WAAW,EACXxB,GAAoB,IAAhByB,KAAKC,UAEXlB,EAAS,GAAD,mBAAKC,GAAL,CAAYa,KACpBZ,EAAa,KAwBCiB,SAAsC,IAA5BhB,EAAUiB,OAAOC,OAC3BC,KAAK,MACLf,KAAK,SACL3B,UAAWH,EAAQmB,UALrB,SAOE,mBAAGhB,UAAU,2BAInB2C,WAAY,aChElBzD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0B,KAAM,CACJ8B,QAAS,OACT7B,MAAO,cACP8B,gBAAiB,UACjBvD,OAAQ,YACR2B,aAAc,OACd6B,QAAS,kBACT,2BAA4B,CAC1BC,cAAe,SACfhC,MAAO,aAoBEiC,EAfF,SAAC,GAA6D,IAA3D5B,EAA0D,EAA1DA,SAAUC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,UAAW3B,EAAgB,EAAhBA,UAClDC,EAAUX,IAChB,OACE,uBAAMc,UAAWH,EAAQiB,KAAzB,UACE,cAAC,EAAD,CACEM,SAAUA,EACVC,MAAOA,EACPC,aAAcA,EACdC,UAAWA,IAEb,cAAC,EAAD,CAAa3B,UAAWA,Q,kCCxBxBV,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0B,KAAM,CACJ8B,QAAS,OACTK,eAAgB,gBAChBC,SAAU,OACVJ,QAAS,SACTK,aAAc,UACdN,gBAAiB,UACjBO,WAAY,SACZ,2BAA4B,CAC1BL,cAAe,WAGnBM,QAAS,CACPC,KAAM,YAGRC,SAAU,CACRC,UAAW,QAGbC,iBAAiB,GAGjBC,QAAS,CACPC,WAAY,UACZzC,MAAO,QACP0C,OAAQ,OACRd,QAAS,OACTe,OAAQ,UACRC,SAAU,OACV,eAAgB,CACdhB,QAAS,cAIbiB,YAAa,CACXJ,WAAY,qBAEdK,UAAW,CACTnB,gBAAiB,WAEnBT,UAAW,CACT6B,eAAgB,eAChBC,QAAS,WAyDEC,EArDF,SAAC,GAA8B,IAA5BjC,EAA2B,EAA3BA,KAAMb,EAAqB,EAArBA,MAAMD,EAAe,EAAfA,SACpBvB,EAAUX,IAqBhB,OACE,eAACkF,EAAA,EAAD,CAAMpE,UAAWH,EAAQiB,KAAMF,GAAIsB,EAAKtB,GAAxC,UACE,cAACyD,EAAA,EAAD,CAAarE,UAAWH,EAAQwD,QAAhC,SACE,cAACiB,EAAA,EAAD,CACEC,UAAU,IACVxE,QAAQ,QACRC,UAAS,UAAKH,EAAQ0D,SAAb,YACPrB,EAAKE,WAAavC,EAAQuC,WAJ9B,SAOGF,EAAKC,SAGV,sBAAKnC,UAAWH,EAAQ4D,iBAAxB,UACE,wBACEzB,QAjBgB,WAZtBZ,EAASC,EAAMmD,KAAI,SAAAC,GACjB,OAAGvC,EAAKtB,KAAO6D,EAAK7D,GACX,2BACF6D,GADL,IACWrC,WAAYqC,EAAKrC,YAGvBqC,OAwBHzE,UAAS,UAAKH,EAAQ6D,QAAb,YAAwB7D,EAAQkE,YAAhC,YACP7B,EAAKE,WAAavC,EAAQmE,WAH9B,SAME,mBAAGhE,UAAS,cAASkC,EAAKE,UAAY,WAAa,gBAGrD,wBAAQJ,QA3BQ,WAdpBZ,EAASC,EAAMqD,QAAO,SAAAD,GAAI,OAAIA,EAAK7D,KAAOsB,EAAKtB,QAyCXZ,UAAWH,EAAQ6D,QAAnD,SACE,mBAAG1D,UAAU,0BChGjBd,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0B,KAAM,CACJtB,SAAU,QACVmF,SAAU,cACVC,UAAW,OACXhC,QAAS,OACTK,eAAgB,aAChBF,cAAe,SACfK,WAAY,SACZN,QAAS,IACTxD,OAAQ,OACR,OAAQ,CACNyB,MAAO,aAgBE8D,EAXE,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,cAAezD,EAAqB,EAArBA,MAAMD,EAAe,EAAfA,SACjCvB,EAAUX,IAChB,OACE,oBAAIc,UAAWH,EAAQiB,KAAvB,SACGgE,EAAcN,KAAI,SAACtC,GAAD,OACjB,cAAC,EAAD,CAAMd,SAAUA,EAAUC,MAAOA,EAAOa,KAAMA,GAAWA,EAAKtB,U,kBChBhE1B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC2F,cAAe,CACbvB,UAAW,SACXX,gBAAiB,UACjBmC,UAAW,QACXlC,QAAS,OACT,2BAA4B,CAE1BA,QAAS,aAuEAmC,EAlEH,WACV,IAAMpF,EAAUX,IAChB,EAA0BgG,mBAAS,IAAnC,mBAAO7D,EAAP,KAAcD,EAAd,KACA,EAAkC8D,mBAAS,IAA3C,mBAAO3D,EAAP,KAAkBD,EAAlB,KACA,EAA4B4D,mBAAS,OAArC,mBAAOC,EAAP,KAAevF,EAAf,KACA,EAA0CsF,mBAAS,IAAnD,mBAAOJ,EAAP,KAAsBM,EAAtB,KAgCA,OA9BAC,qBAAU,YACe,WACrB,GAAqC,MAAjCC,aAAaC,QAAQ,SACvBD,aAAaE,QAAQ,QAASC,KAAKC,UAAUrE,QACxC,CACL,IAAMsE,EAAaF,KAAKG,MAAMN,aAAaC,QAAQ,UACnDnE,EAASuE,IAGbE,KAEC,IAEHR,qBAAU,YACc,WACpB,OAAQF,GACN,IAAK,OACHC,EAAiB/D,EAAMqD,QAAO,SAACxC,GAAD,OAA6B,IAAnBA,EAAKE,cAC7C,MACF,IAAK,UACHgD,EAAiB/D,EAAMqD,QAAO,SAACxC,GAAD,OAA6B,IAAnBA,EAAKE,cAC7C,MACF,QACEgD,EAAiB/D,IAIvByE,KACC,CAACzE,EAAO8D,IAGT,qCACE,cAACY,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAWrB,SAAS,KAAK3E,UAAWH,EAAQkF,cAA5C,UACE,cAACT,EAAA,EAAD,CACEC,UAAU,KACVxE,QAAQ,KACRmB,MAAM,YACNlB,UAAWH,EAAQoG,UAJrB,wBAQA,cAAC,EAAD,CACE7E,SAAUA,EACVC,MAAOA,EACPC,aAAcA,EACdC,UAAWA,EACX3B,UAAWA,IAEb,cAAC,EAAD,CACEwB,SAAUA,EACV0D,cAAeA,EACfzD,MAAOA,W,0BCzEbjC,EAAQ8G,YAAe,CACzBC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,YAAa,CACXF,KAAM,WAERG,oBAAqB,CACnBH,KAAM,WAERI,OAAQ,CACNJ,KAAM,cAQZjH,EAAQsH,YAAoBtH,GAE5BuH,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAe1H,MAAOA,EAAtB,SACE,cAAC,EAAD,QAGJ2H,SAASC,eAAe,W","file":"static/js/main.6ffe2b9c.chunk.js","sourcesContent":["import Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst SelectInput = ({ setStatus }) => {\n  const classes = useStyles();\n  const handlerStatus = (e) => setStatus(e.target.value);\n\n  return (\n    <FormControl variant=\"outlined\" className={classes.formControl}>\n      <InputLabel htmlFor=\"outlined-order-native-simple\">Show</InputLabel>\n      <Select\n        native\n        label=\"Show\"\n        onChange={handlerStatus}\n        name=\"showTasks\"\n        inputProps={{\n          name: \"Show\",\n          id: \"outlined-Show-native-simple\",\n        }}\n      >\n        <option aria-label=\"None\" value=\"\" />\n        <option value=\"all\">All</option>\n        <option value=\"done\">Completed</option>\n        <option value=\"pending\">Incomplete</option>\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default SelectInput;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      width: \"25rem\",\n      margin: theme.spacing(1),\n      \"@media (max-width:660px)\": {\n        width: '94%',\n      },\n    },\n  },\n  addButton: {\n    borderRadius: \"5px\",\n    color: \"#e29578\",\n  },\n}));\n\nconst Input = ({ setTasks, tasks, setInputText, inputText }) => {\n  const classes = useStyles();\n \n  const addTaskhandler = (e) => {\n    e.preventDefault();\n    const task = {\n      text: inputText,\n      completed: false,\n      id: Math.random() * 10000,\n    };\n    setTasks([...tasks, task]);\n    setInputText(\"\");\n  };\n\n  const inputTextHandler = (e) => setInputText(e.target.value);\n\n  return (\n    <>\n      <div className={classes.root}>\n        <FormControl\n          className={clsx(classes.margin, classes.textField)}\n          variant=\"outlined\"\n        >\n          <InputLabel htmlFor=\"outlined-adornment-newAssignment\">\n            Add Task\n          </InputLabel>\n          <OutlinedInput\n            id=\"outlined-adornment-newAssignment\"\n            type=\"text\"\n            value={inputText}\n            onChange={inputTextHandler}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  onClick={addTaskhandler}\n                  disabled={inputText.trim().length === 0}\n                  edge=\"end\"\n                  type=\"submit\"\n                  className={classes.addButton}\n                >\n                  <i className=\"fas fa-plus-square\"></i>\n                </IconButton>\n              </InputAdornment>\n            }\n            labelWidth={70}\n          />\n        </FormControl>\n      </div>\n    </>\n  );\n};\n\nexport default Input;\n","import SelectInput from \"./SelectInput\";\nimport Input from \"./Input\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    width: \"fit-content\",\n    backgroundColor: \"#f8edeb\",\n    margin: \"2rem auto\",\n    borderRadius: \"10px\",\n    padding: \"0.25rem 0.75rem\",\n    \"@media (max-width:660px)\": {\n      flexDirection: \"column\",\n      width: '100%',\n    },\n  },\n}));\n\nconst Form = ({ setTasks, tasks, setInputText, inputText, setStatus }) => {\n  const classes = useStyles();\n  return (\n    <form className={classes.root}>\n      <Input\n        setTasks={setTasks}\n        tasks={tasks}\n        setInputText={setInputText}\n        inputText={inputText}\n      />\n      <SelectInput setStatus={setStatus} />\n    </form>\n  );\n};\n\nexport default Form;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    flexWrap: 'wrap',\n    padding: \"0.4rem\",\n    marginBottom: \"0.75rem\",\n    backgroundColor: \"#f4f3ee\",\n    alignItems: \"center\",\n    \"@media (max-width:660px)\": {\n      flexDirection: \"column\",\n    },\n  },\n  content: {\n    flex: \"1 0 auto\",\n\n  },\n  mainText: {\n    textAlign: \"left\",\n\n  },\n  buttonsContainer:{\n    \n  },\n  buttons: {\n    background: \"#643939\",\n    color: \"white\",\n    border: \"none\",\n    padding: \"1rem\",\n    cursor: \"pointer\",\n    fontSize: \"1rem\",\n    \"&> .fa-times\": {\n      padding: \"0 0.16rem\",\n    },\n  },\n\n  checkButton: {\n    background: \"rgb(87, 179, 151)\",\n  },\n  redButton: {\n    backgroundColor: \"#a73636\",\n  },\n  completed: {\n    textDecoration: \"line-through\",\n    opacity: \"0.5\",\n  },\n}));\n\nconst Task = ({ task, tasks,setTasks }) => {\n  const classes = useStyles();\n\n  const deleteFromStorage = () => {\n    setTasks(tasks.filter(item => item.id !== task.id))\n  };\n\n  const editFromStorage = () => {\n    setTasks(tasks.map(item => {\n      if(task.id === item.id){\n        return {\n          ...item, completed: !item.completed\n        }\n      }\n      return item;\n    }))\n  };\n\n  const handlerDelete = () => deleteFromStorage();\n\n  const handlerComplete = () => editFromStorage();\n\n  return (\n    <Card className={classes.root} id={task.id}>\n      <CardContent className={classes.content}>\n        <Typography\n          component=\"p\"\n          variant=\"body1\"\n          className={`${classes.mainText} ${\n            task.completed && classes.completed\n          }`}\n        >\n          {task.text}\n        </Typography>\n      </CardContent>\n      <div className={classes.buttonsContainer}>\n        <button\n          onClick={handlerComplete}\n          className={`${classes.buttons} ${classes.checkButton} ${\n            task.completed && classes.redButton\n          }`}\n        >\n          <i className={`fas ${task.completed ? \"fa-times\" : \"fa-check\"}`}></i>\n        </button>\n\n        <button onClick={handlerDelete} className={classes.buttons}>\n          <i className=\"fas fa-trash\"></i>\n        </button>\n      </div>\n    </Card>\n  );\n};\n\nexport default Task;\n","import Task from \"./Task\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: \"10rem\",\n    maxWidth: \"fit-content\",\n    listStyle: \"none\",\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"0\",\n    margin: \"auto\",\n    \"& >*\": {\n      width: \"100%\",\n    },\n  },\n}));\n\nconst ToDoList = ({ filteredTasks, tasks,setTasks }) => {\n  const classes = useStyles();\n  return (\n    <ul className={classes.root}>\n      {filteredTasks.map((task) => (\n        <Task setTasks={setTasks} tasks={tasks} task={task} key={task.id} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ToDoList;\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport ToDoList from \"./components/ToDoList\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainContainer: {\n    textAlign: \"center\",\n    backgroundColor: \"#6d6875\",\n    minHeight: \"100vh\",\n    padding: \"5rem\",\n    \"@media (max-width:780px)\": {\n      // eslint-disable-line no-useless-computed-key\n      padding: \"2rem\",\n    },\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const [tasks, setTasks] = useState([]);\n  const [inputText, setInputText] = useState(\"\");\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTasks, setFilteredTasks] = useState([]);\n\n  useEffect(() => {\n    const getFromStorage = () => {\n      if (localStorage.getItem(\"tasks\") == null) {\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n      } else {\n        const tasksLocal = JSON.parse(localStorage.getItem(\"tasks\"));\n        setTasks(tasksLocal);\n      }\n    };\n    getFromStorage();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const handlerFilter = () => {\n      switch (status) {\n        case \"done\":\n          setFilteredTasks(tasks.filter((task) => task.completed === true));\n          break;\n        case \"pending\":\n          setFilteredTasks(tasks.filter((task) => task.completed === false));\n          break;\n        default:\n          setFilteredTasks(tasks);\n          break;\n      }\n    };\n    handlerFilter();\n  }, [tasks, status]);\n\n  return (\n    <>\n      <CssBaseline />\n      <Container maxWidth=\"xl\" className={classes.mainContainer}>\n        <Typography\n          component=\"h1\"\n          variant=\"h1\"\n          color=\"secondary\"\n          className={classes.mainTitle}\n        >\n          To-do List\n        </Typography>\n        <Form\n          setTasks={setTasks}\n          tasks={tasks}\n          setInputText={setInputText}\n          inputText={inputText}\n          setStatus={setStatus}\n        />\n        <ToDoList\n          setTasks={setTasks}\n          filteredTasks={filteredTasks}\n          tasks={tasks}\n        />\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#6d6875\",\n    },\n    secondary: {\n      main: \"#ffb4a2\",\n    },\n    textPrimary: {\n      main: \"#ffcdb2\",\n    },\n    secondaryBackground: {\n      main: \"#b5838d\",\n    },\n    danger: {\n      main: \"#e5989b\",\n    },\n  },\n});\n\n\n\n\ntheme = responsiveFontSizes(theme);\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}