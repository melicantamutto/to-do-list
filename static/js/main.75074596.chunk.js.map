{"version":3,"sources":["components/Select.js","components/Input.js","components/Form.js","components/Task.js","components/ToDoList.js","App.js","index.js"],"names":["Select","setStatus","className","name","id","onChange","e","target","value","Input","type","Form","setTasks","tasks","setInputText","inputText","Task","task","completed","text","ToDoList","filteredTasks","map","App","useState","status","setFilteredTasks","useEffect","filter","handlerFilter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAiBeA,EAjBA,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAMhB,OACE,qBAAKC,UAAU,mBAAf,SACE,yBAAQC,KAAK,YAAYD,UAAU,gBAAgBE,GAAG,YAAYC,SANhD,SAACC,GACrBL,EAAUK,EAAEC,OAAOC,QAKjB,UACE,wBAAQA,MAAM,MAAd,mBACA,wBAAQA,MAAM,OAAd,uBACA,wBAAQA,MAAM,UAAd,+BCEOC,EAbD,WACZ,OACE,mCACE,sBAAKP,UAAU,kBAAf,UACE,uBAAOQ,KAAK,SACZ,wBAAQR,UAAU,aAAaQ,KAAK,SAApC,SACE,mBAAGR,UAAU,+BCWRS,EAdF,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,SAAUC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,UAAWd,EAAgB,EAAhBA,UACxD,OACE,iCACE,cAAC,EAAD,CACEW,SAAUA,EACVC,MAAOA,EACPC,aAAcA,EACdC,UAAWA,IAEb,cAAC,EAAD,CAAQd,UAAWA,QCKVe,EAjBF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,OACE,qBAAIf,UAAU,OAAOE,GAAIa,EAAKb,GAA9B,UACE,mBAAGF,UAAS,oBAAee,EAAKC,WAAa,aAA7C,SAA6DD,EAAKE,OAClE,wBAEEjB,UAAS,uBAAkBe,EAAKC,WAAa,cAF/C,SAIE,mBAAGhB,UAAS,cAASe,EAAKC,UAAY,WAAa,gBAErD,wBAAShB,UAAU,gBAAnB,SACE,mBAAGA,UAAU,uBCGNkB,EAZE,SAAC,GAAwC,IAAtCP,EAAqC,EAArCA,MAAOD,EAA8B,EAA9BA,SAAUS,EAAoB,EAApBA,cACnC,OACE,qBAAKnB,UAAU,iBAAf,SACE,oBAAIA,UAAU,YAAd,SACGmB,EAAcC,KAAI,SAACL,GAAD,OACjB,cAAC,EAAD,CAAMA,KAAMA,EAAMJ,MAAOA,EAAOD,SAAUA,GAAeK,EAAKb,YC2CzDmB,EA7CH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOX,EAAP,KAAcD,EAAd,KACA,EAAkCY,mBAAS,IAA3C,mBAAOT,EAAP,KAAkBD,EAAlB,KACA,EAA4BU,mBAAS,OAArC,mBAAOC,EAAP,KAAexB,EAAf,KACA,EAA0CuB,mBAAS,IAAnD,mBAAOH,EAAP,KAAsBK,EAAtB,KAoBA,OAjBAC,qBAAU,YACc,WACpB,OAAQF,GACN,IAAK,OACHC,EAAiBb,EAAMe,QAAO,SAACX,GAAD,OAA6B,IAAnBA,EAAKC,cAC7C,MACF,IAAK,UACHQ,EAAiBb,EAAMe,QAAO,SAACX,GAAD,OAA6B,IAAnBA,EAAKC,cAC7C,MACF,QACEQ,EAAiBb,IAKvBgB,KACC,CAAChB,EAAOY,IAET,qCACE,iCACE,8CAEF,cAAC,EAAD,CACEb,SAAUA,EACVC,MAAOA,EACPC,aAAcA,EACdC,UAAWA,EACXd,UAAWA,IAEb,cAAC,EAAD,CACEoB,cAAeA,EACfT,SAAUA,EACVC,MAAOA,QCvCfiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.75074596.chunk.js","sourcesContent":["const Select = ({ setStatus }) => {\n\n  const handlerStatus = (e) =>{\n    setStatus(e.target.value)\n  }\n\n  return (\n    <div className=\"select-container\">\n      <select name=\"showTasks\" className=\"filter-button\" id=\"showTasks\" onChange={handlerStatus}>\n        <option value=\"all\">Todas</option>\n        <option value=\"done\">Completas</option>\n        <option value=\"pending\">Incompletas</option>\n      </select>\n    </div>\n  );\n};\n\nexport default Select;","const Input = () => {\n  return (\n    <>\n      <div className=\"input-container\">\n        <input type=\"text\" />\n        <button className=\"add-button\" type=\"submit\">\n          <i className=\"fas fa-plus-square\"></i>\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default Input;\n","import Select from \"./Select\";\nimport Input from \"./Input\";\n\nconst Form = ({ setTasks, tasks, setInputText, inputText, setStatus }) => {\n  return (\n    <form>\n      <Input\n        setTasks={setTasks}\n        tasks={tasks}\n        setInputText={setInputText}\n        inputText={inputText}\n      />\n      <Select setStatus={setStatus} />\n    </form>\n  );\n};\n\nexport default Form;\n","const Task = ({ task }) => {\n  return (\n    <li className=\"task\" id={task.id}>\n      <p className={`task-text ${task.completed && \"completed\"}`}>{task.text}</p>\n      <button\n\n        className={`check-button ${task.completed && \"red-button\"}`}\n      >\n        <i className={`fas ${task.completed ? \"fa-times\" : \"fa-check\"}`}></i>\n      </button>\n      <button  className=\"delete-button\">\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </li>\n  );\n};\n\nexport default Task;\n","import Task from \"./Task\";\n\nconst ToDoList = ({ tasks, setTasks, filteredTasks }) => {\n  return (\n    <div className=\"todo-container\">\n      <ul className=\"todo-list\">\n        {filteredTasks.map((task) => (\n          <Task task={task} tasks={tasks} setTasks={setTasks} key={task.id} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ToDoList;\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport ToDoList from \"./components/ToDoList\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n  const [inputText, setInputText] = useState(\"\");\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTasks, setFilteredTasks] = useState([]);\n     \n\n  useEffect(() => {\n    const handlerFilter = () => {\n      switch (status) {\n        case \"done\":\n          setFilteredTasks(tasks.filter((task) => task.completed === true));\n          break;\n        case \"pending\":\n          setFilteredTasks(tasks.filter((task) => task.completed === false));\n          break;\n        default:\n          setFilteredTasks(tasks);\n          break;\n      }\n    };\n\n    handlerFilter();\n  }, [tasks, status]);\n  return (\n    <>\n      <header>\n        <h1>To-do List</h1>\n      </header>\n      <Form\n        setTasks={setTasks}\n        tasks={tasks}\n        setInputText={setInputText}\n        inputText={inputText}\n        setStatus={setStatus}\n      />\n      <ToDoList\n        filteredTasks={filteredTasks}\n        setTasks={setTasks}\n        tasks={tasks}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}