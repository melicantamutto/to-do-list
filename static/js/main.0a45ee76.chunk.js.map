{"version":3,"sources":["components/Select.js","firebase-config.js","components/Input.js","components/Form.js","components/Task.js","components/ToDoList.js","App.js","index.js"],"names":["Select","setStatus","className","name","id","onChange","e","target","value","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Input","setTasks","tasks","setInputText","inputText","type","disabled","trim","length","onClick","preventDefault","task","text","completed","Math","random","collection","add","then","docRef","console","log","catch","error","addToFirebase","Form","Task","item","doc","set","delete","ToDoList","filteredTasks","map","App","useState","status","setFilteredTasks","useEffect","docs","get","querySnapshot","forEach","push","data","filter","handlerFilter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a45ee76.chunk.js","sourcesContent":["const Select = ({ setStatus }) => {\n  const handlerStatus = (e) => setStatus(e.target.value);\n\n  return (\n    <div className=\"select-container\">\n      <select\n        name=\"showTasks\"\n        className=\"filter-button\"\n        id=\"showTasks\"\n        onChange={handlerStatus}\n      >\n        <option value=\"all\">Todas</option>\n        <option value=\"done\">Completas</option>\n        <option value=\"pending\">Incompletas</option>\n      </select>\n    </div>\n  );\n};\n\nexport default Select;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD8tonH-R-L5YmiK6Mv3ojGZSdF3Rtgs0g\",\n  authDomain: \"to-do-list-d76aa.firebaseapp.com\",\n  projectId: \"to-do-list-d76aa\",\n  storageBucket: \"to-do-list-d76aa.appspot.com\",\n  messagingSenderId: \"215976367676\",\n  appId: \"1:215976367676:web:183587c07f9705dc361539\",\n};\n\n// Initialize Firebase\nconst fb = firebase.initializeApp(firebaseConfig);\nexport const db = fb.firestore();\n","import { db } from \"../firebase-config\";\n\nconst Input = ({ setTasks, tasks, setInputText, inputText }) => {\n  const addToFirebase = (task) => {\n    db.collection(\"tasks\")\n      .add(task)\n      .then((docRef) => {\n        console.log(\"Document written with ID: \", docRef.id);\n      })\n      .catch((error) => {\n        console.error(\"Error adding document: \", error);\n      });\n  };\n\n  const addTaskhandler = (e) => {\n    e.preventDefault();\n    const task = {\n      text: inputText,\n      completed: false,\n      id: Math.random() * 10000,\n    };\n    setTasks([...tasks, task]);\n    addToFirebase(task);\n    setInputText(\"\");\n  };\n\n  const inputTextHandler = (e) => setInputText(e.target.value);\n\n  return (\n    <>\n      <div className=\"input-container\">\n        <input type=\"text\" onChange={inputTextHandler} value={inputText} />\n        <button\n          disabled={inputText.trim().length === 0}\n          onClick={addTaskhandler}\n          className=\"add-button\"\n          type=\"submit\"\n        >\n          <i className=\"fas fa-plus-square\"></i>\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default Input;\n","import Select from \"./Select\";\nimport Input from \"./Input\";\n\nconst Form = ({ setTasks, tasks, setInputText, inputText, setStatus }) => {\n  return (\n    <form>\n      <Input\n        setTasks={setTasks}\n        tasks={tasks}\n        setInputText={setInputText}\n        inputText={inputText}\n      />\n      <Select setStatus={setStatus} />\n    </form>\n  );\n};\n\nexport default Form;\n","import { db } from \"../firebase-config\";\n\nconst Task = ({ task }) => {\n\n  const deleteFromFirebase = () =>{\n    db.collection(\"tasks\")\n      .doc(task.id)\n      .delete()\n      .then(() => {\n        console.log(\"Document successfully deleted!\");\n      })\n      .catch((error) => {\n        console.error(\"Error removing document: \", error);\n      });\n  }\n\n  const editFromFirebase = (item) =>{\n    db.collection(\"tasks\")\n      .doc(item.id)\n      .set({\n        ...item,\n        completed: !item.completed,\n      })\n      .then(() => {\n        console.log(\"Document successfully written!\");\n      })\n      .catch((error) => {\n        console.error(\"Error writing document: \", error);\n      });\n  }\n\n  const handlerDelete = () => deleteFromFirebase();\n\n  const handlerComplete = () => editFromFirebase(task);\n\n  return (\n    <li className=\"task\" id={task.id}>\n      <p className={`task-text ${task.completed && \"completed\"}`}>\n        {task.text}\n      </p>\n      <button\n        onClick={handlerComplete}\n        className={`check-button ${task.completed && \"red-button\"}`}\n      >\n        <i className={`fas ${task.completed ? \"fa-times\" : \"fa-check\"}`}></i>\n      </button>\n      <button onClick={handlerDelete} className=\"delete-button\">\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </li>\n  );\n};\n\nexport default Task;\n","import Task from \"./Task\";\n\nconst ToDoList = ({ filteredTasks }) => {\n  return (\n    <div className=\"todo-container\">\n      <ul className=\"todo-list\">\n        {filteredTasks.map((task) => (\n          <Task task={task} key={task.id} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ToDoList;\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport ToDoList from \"./components/ToDoList\";\nimport { db } from \"./firebase-config\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n  const [inputText, setInputText] = useState(\"\");\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTasks, setFilteredTasks] = useState([]);\n\n  const getFromFirebase = () => {\n    const docs = [];\n    db.collection(\"tasks\")\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          docs.push({ ...doc.data(), id: doc.id });\n        });\n        setTasks(docs);\n      });\n  };\n  \n  useEffect(getFromFirebase, [tasks]);\n\n  useEffect(() => {\n    const handlerFilter = () => {\n      switch (status) {\n        case \"done\":\n          setFilteredTasks(tasks.filter((task) => task.completed === true));\n          break;\n        case \"pending\":\n          setFilteredTasks(tasks.filter((task) => task.completed === false));\n          break;\n        default:\n          setFilteredTasks(tasks);\n          break;\n      }\n    };\n    handlerFilter();\n  }, [tasks, status]);\n\n  return (\n    <>\n      <header>\n        <h1>To-do List</h1>\n      </header>\n      <Form\n        setTasks={setTasks}\n        tasks={tasks}\n        setInputText={setInputText}\n        inputText={inputText}\n        setStatus={setStatus}\n      />\n      <ToDoList\n        filteredTasks={filteredTasks}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"./firebase-config\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}